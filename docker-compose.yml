version: "3.9"
services:
  api:
    image: client:0.9.1
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
    ports:
      - "8443:8443"
    networks:
      - postgres
    restart: unless-stopped

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "443:443"  # Порт, на котором будет прослушиваться HTTPS
    volumes:
      - /etc/nginx/certs/certificate.crt:/etc/nginx/certs/certificate.crt
      - /etc/nginx/certs/key.crt:/etc/nginx/certs/key.crt
    depends_on:
      - postgres
    networks:
      - postgres

  postgres:
    image: postgres:14.7-alpine
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: "iqj"
      POSTGRES_USER: "iqj_admin"
      POSTGRES_PASSWORD: "aZCF131"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./docker_scripts/init.sql:/docker-entrypoint-initdb.d/db.sql
    ports:
      - "5436:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U iqj_admin -d iqj"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
    networks:
      - postgres

networks:
  postgres:
    driver: bridge
