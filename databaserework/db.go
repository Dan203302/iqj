package databaserework

import (
	"database/sql"
	"fmt"
	"iqj/config"
	"sync"
)

// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è (–æ–±—ä–µ–∫—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö) –∏—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –µ—ë –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º(—Ö–µ–Ω–¥–ª–µ—Ä–∞–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü)
var Database2 database123

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞, —Ä–µ–∞–ª–∏–∑—É—é—â–∞—è –¥–≤—É—Ö—É—Ä–æ–≤–Ω–µ–≤–æ–µ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π, –¥–ª—è –±–æ–ª–µ–µ —É–¥–æ–±–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
type database123 struct {
	Users *usersTable
	News  *newsTable
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å—Ç—Ä—É–∫—Ç—É—Ä, –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ –¥–æ—Å—Ç—É–ø –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (–ø–æ –±–æ–ª—å—à–µ–π —á–∞—Å—Ç–∏ —Å–¥–µ–ª–∞–Ω –¥–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤)
type TableModel interface {
	Add(entity) error
	Get(entity) ([]entity, error)
	new(*sql.DB, *sync.Mutex)
}

/*
–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –≤–∫–ª—é—á–∞—é—â–∏–π –≤ —Å–µ–±—è –≤—Å–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å—É—â–Ω–æ—Å—Ç–µ–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
(–ø—Ä–∏–º. User,Lesson,News,Student)
*/
type entity interface {
	isDefault() bool
}

/*
NewDatabaseInstance() —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫—É,
–µ—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–æ–∑–¥–∞—Ç—å –Ω–µ —É–¥–∞–ª–æ—Å—å, —á—Ç–æ–±—ã –Ω–µ –∑–∞—Ö–ª–∞–º–ª—è—Ç—å main(), –≤—ã–∑—ã–≤–∞–µ—Ç –ø–∞–Ω–∏–∫—É
–ø—Ä–∏ –æ—à–∏–±–∫–µ.
*/
func NewDatabaseInstance() {

	// iqj/config/config.go, –¥–∞–ª—å—à–µ –¥—É–º–∞—é —Ä–∞–∑–±–µ—Ä–µ—Ç–µ—Å—å
	connectionString := fmt.Sprintf(
		"host=%v port=%v user=%v password=%v dbname=%v sslmode=disable",
		config.DbData["host"],
		config.DbData["port"],
		config.DbData["user"],
		config.DbData["password"],
		config.DbData["database"])

	// –ø–æ–¥–∫–ª—é—á–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏ –ø–æ–¥–≥–∞—Ç–∞–≤–ª–∏–≤–∞–µ—Ç
	// –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (–¥–∞–∂–µ —Å–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—ã)
	err := Database2.connectDatabase(connectionString)

	if err != nil {
		// –µ—Å–ª–∏ —á–µ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, —Ç–æ –¥–∞–µ—Ç –ø–∏–∑–¥—ã –≤—Å–µ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ, –∏–±–æ —á–µ –≤—ã
		// —Ç–∞–º —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –Ω–∞–∫–æ—Å—è—á–∏–ª–∏ –¥—É—Ä–∞—á–∫–∏, —Å–æ–≤—Å–µ–º —Å —É–º–∞ –ø–æ—Å—Ö–æ–¥–∏–ª–∏?
		panic(err)
	}
}

// –ü–æ–¥–∫–ª—é—á–∞–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É—è connectionString, –∞ —Ç–∞–∫–∂–µ sql.Open(), —Ç–∞–∫–∂–µ —Ä–∞–∑–¥–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º –¥–æ—Å—Ç—É–ø –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
func (st *database123) connectDatabase(connectionString string) error {

	db, err := sql.Open("postgres", connectionString)

	if err != nil {
		//
		return fmt.Errorf("could not connect to the database: %v", err)
	}

	// —Å–æ–∑–¥–∞–µ–º –µ–¥–∏–Ω—ã–π –º—å—Ç–µ–∫—Å, —Ç.–∫. –≤—Å–µ —Ç–∞–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É –Ω–∞—Å –æ–¥–Ω–æ
	// —Ö–æ—Ç—è –º–∞–ª–æ–µ –¥–∞ —É–¥–∞–ª–æ–µ, –Ω–æ –≤—Å–µ —Ä–∞–≤–Ω–æ, –º–Ω–µ –ø–æ–∫–∞ —Å–ª–∏—à–∫–æ–º –≤ –ø–∞–¥–ª—É
	// –¥–µ–ª–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π, –∞ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –Ω–æ–≤—ã–µ –¥–ª—è –∫–∞–∂–¥–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
	// —É–∂–µ –∫–∞–∫-—Ç–æ –Ω–µ IdIoMaTiC Go))) –¥–æ–≤–æ–ª—å—Å—Ç–≤—É–π—Ç–µ—Å—å —Ç–µ–º —á—Ç–æ –∏–º–µ–µ—Ç–µ
	mutex := &sync.Mutex{}

	// –†–∞–∑–¥–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î) –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–π –¥–æ—Å—Ç—É–ø–∞ –∫ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Ç–∞–±–ª–∏—Ü–∞–º
	st.connectTables(db, mutex)

	err = db.Ping()
	if err != nil {
		return fmt.Errorf("could not ping the database: %v", err)
	}

	// –≤–æ–∑–≤—Ä–∞—â–∞–µ–º nil –≤–º–µ—Å—Ç–æ –æ—à–∏–±–∫–∏ –µ—Å–ª–∏ –≤—Å–µ —Ö–æ—Ä–æ—à–æ –∏ –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ—Ç–µ—Ä—è–ª –∫–æ–Ω—Ñ–∏–≥–∏
	// —Å–ø–∞—Å–∏–±–æ –ª—é–±–ª—é –≤–∞—Å —á–º–æ–∫–∏ —á–º–æ–∫–∏ üòáüòáüòá
	return nil
}

func (st *database123) connectTables(db *sql.DB, mutex *sync.Mutex) {
	// —è –±–µ–∑–¥–∞—Ä—å –ø–æ—ç—Ç–æ–º—É –ø—Ä–æ—Å—Ç–æ –∑–∞—Ö–∞—Ä–¥–∫–æ–¥–∏–ª, —è —Ä–µ–∞–ª—å–Ω–æ –Ω–µ –∑–Ω–∞—é —á–µ —Ç—É—Ç –µ—â–µ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å
	// –ø–æ—Å–ª—É—à–∞—é –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∑–∞ —Å—Ç–æ —Ä—É–±–ª–µ–π, –æ–±—Ä–∞—â–∞—Ç—å—Å—è –≤ —Ç–≥, –¥—É–º–∞—é –Ω–∞–π–¥–µ—Ç–µ
	st.Users.new(db, mutex)
	st.News.new(db, mutex)
}
